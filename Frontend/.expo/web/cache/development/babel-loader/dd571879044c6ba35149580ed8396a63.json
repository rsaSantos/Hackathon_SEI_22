{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport { useNavigation } from '@react-navigation/native';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { useEffect, useState } from 'react';\nimport { Icon } from 'react-native-elements';\nimport { useEmenta } from \"../contexts/Ementa\";\nimport { useReceita } from \"../contexts/Receita\";\nimport API from \"../API/api\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Recepies() {\n  var _useEmenta = useEmenta(),\n      ementa = _useEmenta.ementa;\n\n  var _useReceita = useReceita(),\n      setReceita = _useReceita.setReceita;\n\n  var _useState = useState(receitasPrompt),\n      _useState2 = _slicedToArray(_useState, 2),\n      items = _useState2[0],\n      setItems = _useState2[1];\n\n  useEffect(function () {\n    if (ementa != null) {\n      var receitas = ementa.map(function (igr) {\n        return _objectSpread(_objectSpread({}, igr), {}, {\n          pressed: false\n        });\n      });\n      setItems(receitas);\n    }\n  }, [ementa]);\n\n  function exchange() {\n    var sending_items;\n\n    for (var i = 0; i < items.length; i++) {\n      sending_items += items[i].nomeEmenta + \",\" + items[i].pressed + \";\";\n    }\n\n    API.get(\"/mudaPlano?nomeEmentas=\" + sending_items).then(function (response) {\n      setItems(response.data);\n    });\n  }\n\n  var handleSelectItem = function handleSelectItem(selectedItemIndex) {\n    return setItems(function (old) {\n      return old.map(function (item, index) {\n        if (selectedItemIndex !== index) return item;\n        var pressed = !item.pressed;\n        return _objectSpread(_objectSpread({}, item), {}, {\n          pressed: pressed\n        });\n      });\n    });\n  };\n\n  function showIcon(pressed) {\n    if (pressed) {\n      return _jsx(Icon, {\n        name: \"trash\",\n        size: 40,\n        color: \"black\",\n        type: \"font-awesome\"\n      });\n    } else return _jsx(Icon, {\n      name: \"trash-o\",\n      size: 40,\n      color: \"black\",\n      type: \"font-awesome\"\n    });\n  }\n\n  var navigation = useNavigation();\n  return _jsxs(View, {\n    style: Styles.container,\n    children: [_jsx(FlatList, {\n      data: items,\n      renderItem: function renderItem(_ref) {\n        var item = _ref.item,\n            index = _ref.index;\n        return _jsxs(View, {\n          children: [_jsxs(Pressable, {\n            onPress: function onPress() {\n              setReceita(item.nomeEmenta);\n              navigation.navigate('Receita');\n            },\n            style: Styles.recipeContainer,\n            children: [_jsx(\"img\", {\n              src: item.fotografia\n            }), _jsxs(Text, {\n              style: Styles.text,\n              children: [\" \", item.nomeEmenta, \" \"]\n            })]\n          }), _jsx(Pressable, {\n            style: Styles.iconContainer,\n            onPress: function onPress() {\n              return handleSelectItem(index);\n            },\n            children: showIcon(item.pressed)\n          })]\n        });\n      }\n    }), _jsxs(Pressable, {\n      style: Styles.changeButton,\n      onPress: function onPress() {\n        return exchange();\n      },\n      children: [_jsx(Icon, {\n        name: \"exchange\",\n        size: 40,\n        color: \"black\",\n        type: \"font-awesome\"\n      }), \" \"]\n    })]\n  });\n}\nvar Styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  recipeContainer: {\n    position: 'relative',\n    height: '40',\n    width: '30',\n    marginBottom: 40,\n    borderColor: 'black',\n    borderRadius: 10,\n    borderWidth: 3\n  },\n  text: {\n    position: 'absolute',\n    fontSize: 30,\n    bottom: -40,\n    right: 2\n  },\n  iconContainer: {\n    position: 'absolute',\n    left: 2,\n    bottom: 0\n  },\n  changeButton: {\n    borderRadius: 40,\n    width: 80,\n    height: 80,\n    borderWidth: 5,\n    borderColor: 'black',\n    backgroundColor: 'white',\n    position: 'absolute',\n    bottom: 0,\n    right: 0,\n    alignItems: 'center',\n    justifyContent: 'center'\n  }\n});\nvar receitasPrompt = [{\n  \"nomeEmenta\": \"no Ementas selected\",\n  \"fotografia\": \"https://media.istockphoto.com/photos/computer-error-picture-id1222806141?k=20&m=1222806141&s=612x612&w=0&h=GoODCHnR0mSefDBLWJpnqVnfRKH9ttdYPO0-KEYbb7w=\",\n  \"pressed\": false\n}];","map":{"version":3,"sources":["/home/joomartins/Desktop/Hackathon_SEI_22/Frontend/Screens/Recipes.tsx"],"names":["useNavigation","useEffect","useState","Icon","useEmenta","useReceita","API","Recepies","ementa","setReceita","receitasPrompt","items","setItems","receitas","map","igr","pressed","exchange","sending_items","i","length","nomeEmenta","get","then","response","data","handleSelectItem","selectedItemIndex","old","item","index","showIcon","navigation","Styles","container","navigate","recipeContainer","fotografia","text","iconContainer","changeButton","StyleSheet","create","flex","position","height","width","marginBottom","borderColor","borderRadius","borderWidth","fontSize","bottom","right","left","backgroundColor","alignItems","justifyContent"],"mappings":"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","sourcesContent":["\nimport { useNavigation } from '@react-navigation/native';\nimport { NativeStackNavigationProp } from '@react-navigation/native-stack';\nimport { FlatList, Pressable, StyleSheet, Text, View } from 'react-native';\nimport { RootStackParamList } from '../stackParams';\nimport { useEffect, useState } from 'react';\nimport { Icon } from 'react-native-elements';\nimport { useEmenta } from '../contexts/Ementa';\nimport { useReceita } from '../contexts/Receita';\nimport API from '../API/api';\n\ntype RequestScreenProp = NativeStackNavigationProp<RootStackParamList, 'Receitas'>;\n\n\nexport default function Recepies() {\n    const { ementa } = useEmenta();\n    const { setReceita } = useReceita();\n    const [items, setItems] = useState(receitasPrompt);\n\n    useEffect(() => {\n        if (ementa != null) {\n            const receitas = ementa.map((igr) => ({ ...igr, pressed: false }))\n            setItems(receitas)\n        }\n    }, [ementa]\n    )\n\n    function exchange() {\n            let sending_items;\n            for(var i = 0; i < items.length; i++) {\n                sending_items += items[i].nomeEmenta + \",\" + items[i].pressed + \";\"\n            }\n            \n        API.get(`/mudaPlano?nomeEmentas=${sending_items}`).then((response) => {\n            setItems(response.data)\n\n        })\n    }\n\n    const handleSelectItem = (selectedItemIndex: Number) =>\n        setItems((old) => {\n            return old.map((item, index) => {\n                if (selectedItemIndex !== index) return item;\n                const pressed = !item.pressed;\n\n                return { ...item, pressed };\n            })\n        })\n\n\n\n    function showIcon(pressed: boolean) {\n        if (pressed) {\n            return <Icon name=\"trash\" size={40} color=\"black\" type=\"font-awesome\" />\n        }\n        else return <Icon name=\"trash-o\" size={40} color=\"black\" type=\"font-awesome\" />\n    }\n\n\n    const navigation = useNavigation<RequestScreenProp>()\n    return (\n        <View style={Styles.container}>\n            <FlatList data={items} renderItem={({ item, index }) =>\n                <View>\n                    <Pressable onPress={() => {\n                        setReceita(item.nomeEmenta)\n\n\n                        navigation.navigate('Receita')\n                    }}\n                        style={Styles.recipeContainer}><img src={item.fotografia} />\n                        <Text style={Styles.text}> {item.nomeEmenta} </Text></Pressable >\n                    <Pressable style={Styles.iconContainer} onPress={() => handleSelectItem(index)}>\n                        {showIcon(item.pressed)}\n                    </Pressable>\n                </View>} />\n            <Pressable style={Styles.changeButton} onPress={() => exchange()}><Icon name=\"exchange\" size={40} color=\"black\" type=\"font-awesome\" /> </Pressable>\n        </View >\n    )\n}\n\n\nconst Styles = StyleSheet.create({\n    container: {\n        flex: 1,\n    },\n    recipeContainer: {\n        position: 'relative',\n        height: '40',\n        width: '30',\n        marginBottom: 40,\n        borderColor: 'black',\n        borderRadius: 10,\n        borderWidth: 3,\n\n\n    },\n    text: {\n        position: 'absolute',\n        fontSize: 30,\n        bottom: -40,\n        right: 2\n    },\n    iconContainer: {\n        position: 'absolute',\n        left: 2,\n        bottom: 0\n    },\n    changeButton: {\n        borderRadius: 40,\n        width: 80,\n        height: 80,\n        borderWidth: 5,\n        borderColor: 'black',\n        backgroundColor: 'white',\n        position: 'absolute',\n        bottom: 0,\n        right: 0,\n        alignItems: 'center',\n        justifyContent: 'center'\n    }\n\n})\n\n\nvar receitasPrompt = [{\n    \"nomeEmenta\": \"no Ementas selected\",\n    \"fotografia\": \"https://media.istockphoto.com/photos/computer-error-picture-id1222806141?k=20&m=1222806141&s=612x612&w=0&h=GoODCHnR0mSefDBLWJpnqVnfRKH9ttdYPO0-KEYbb7w=\",\n    \"pressed\": false\n}]"]},"metadata":{},"sourceType":"module"}