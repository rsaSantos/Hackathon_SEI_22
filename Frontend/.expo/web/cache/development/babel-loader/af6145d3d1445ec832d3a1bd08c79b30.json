{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport { useEffect, useState } from 'react';\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Icon } from 'react-native-elements';\nimport API from \"../API/api\";\nimport { useCount } from \"../contexts/Count\";\nimport { useEmenta } from \"../contexts/Ementa\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function Ingredients() {\n  var _useEmenta = useEmenta(),\n      Ementa = _useEmenta.Ementa,\n      setEmenta = _useEmenta.setEmenta;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      items = _useState2[0],\n      setItems = _useState2[1];\n\n  var _useCount = useCount(),\n      count = _useCount.count;\n\n  useEffect(function _callee() {\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            API.get(\"/nEmentas?numEmentas=\" + count).then(function (response) {\n              var ingredientes = response.data.todosIngredientes.map(function (igr) {\n                return _objectSpread(_objectSpread({}, igr), {}, {\n                  pressed: false\n                });\n              });\n              var receitas = response.data.ementasInfo;\n              setEmenta(receitas);\n              setItems(ingredientes);\n            });\n\n          case 1:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }, [count]);\n\n  var handleSelectItem = function handleSelectItem(selectedItemIndex) {\n    return setItems(function (old) {\n      return old.map(function (item, index) {\n        if (selectedItemIndex !== index) return item;\n        var pressed = !item.pressed;\n        return _objectSpread(_objectSpread({}, item), {}, {\n          pressed: pressed\n        });\n      });\n    });\n  };\n\n  function showIcon(pressed) {\n    if (pressed) {\n      return _jsx(Icon, {\n        name: \"checkcircle\",\n        size: 40,\n        color: \"black\",\n        type: \"antdesign\"\n      });\n    } else return _jsx(Icon, {\n      name: \"checkcircleo\",\n      size: 40,\n      color: \"black\",\n      type: \"antdesign\"\n    });\n  }\n\n  return _jsx(View, {\n    style: Styles.container,\n    children: _jsx(FlatList, {\n      data: items,\n      renderItem: function renderItem(_ref) {\n        var item = _ref.item,\n            index = _ref.index;\n        return _jsxs(View, {\n          style: Styles.itemContainer,\n          children: [_jsxs(Text, {\n            style: Styles.item,\n            children: [\"- \", item.nome, \" (\", item.quantidade, \" \", item.sistemaNumerico, \") \"]\n          }), _jsx(Pressable, {\n            onPress: function onPress() {\n              return handleSelectItem(index);\n            },\n            style: Styles.checkButton,\n            children: showIcon(item.pressed)\n          })]\n        });\n      }\n    })\n  });\n}\nvar Styles = StyleSheet.create({\n  container: {\n    backgroundColor: '#fff',\n    position: 'relative',\n    flex: 1\n  },\n  checkButton: {\n    position: 'absolute',\n    right: 0\n  },\n  item: {\n    fontSize: 30,\n    left: 0\n  },\n  itemContainer: {\n    position: 'relative',\n    marginBottom: 5\n  }\n});","map":{"version":3,"sources":["/home/joao/Desktop/Hackathon_SEI_22/Frontend/Screens/Ingredients.tsx"],"names":["useEffect","useState","Icon","API","useCount","useEmenta","Ingredients","Ementa","setEmenta","items","setItems","count","get","then","response","ingredientes","data","todosIngredientes","map","igr","pressed","receitas","ementasInfo","handleSelectItem","selectedItemIndex","old","item","index","showIcon","Styles","container","itemContainer","nome","quantidade","sistemaNumerico","checkButton","StyleSheet","create","backgroundColor","position","flex","right","fontSize","left","marginBottom"],"mappings":"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","sourcesContent":["\nimport { useRoute } from '@react-navigation/native';\nimport { useEffect, useState } from 'react';\nimport { Button, FlatList, Pressable, StyleSheet, Text, View } from 'react-native';\nimport { Icon } from 'react-native-elements';\nimport API from '../API/api';\nimport { useCount } from '../contexts/Count';\nimport { useEmenta } from '../contexts/Ementa';\n\n\nexport default function Ingredients() {\n\n    const {Ementa,setEmenta} = useEmenta()\n    const [items, setItems] = useState([]);\n    const {count} = useCount();\n\n    useEffect(async () => {\n        API.get(`/nEmentas?numEmentas=${count}`).then((response) => {\n            const ingredientes = response.data.todosIngredientes.map((igr) => ({...igr, pressed: false}))\n            const receitas = response.data.ementasInfo;\n            setEmenta(receitas)\n            setItems(ingredientes);\n        })\n    },[count])\n\n    const handleSelectItem = (selectedItemIndex: Number) =>\n        setItems((old) => {\n            return old.map((item, index) => {\n                if (selectedItemIndex !== index) return item;\n                const pressed = !item.pressed;\n\n                return { ...item, pressed };\n            })\n        })\n\n\n    function showIcon(pressed: boolean) {\n        if (pressed) {\n            return <Icon name=\"checkcircle\" size={40} color=\"black\" type=\"antdesign\" />\n        }\n        else return <Icon name=\"checkcircleo\" size={40} color=\"black\" type=\"antdesign\" />\n    }\n\n\n    return (\n        <View style={Styles.container}>\n            <FlatList data={items}\n                renderItem={({ item, index }) => \n                    <View style={Styles.itemContainer}>\n                        <Text style={Styles.item}>- {item.nome} ({item.quantidade} {item.sistemaNumerico}) </Text>\n                        <Pressable\n                            onPress={() => handleSelectItem(index)}\n                            style={Styles.checkButton}>{showIcon(item.pressed)}</Pressable> \n                    </View>}/>\n            \n        </View>\n\n    )\n}\n\n\nconst Styles = StyleSheet.create({\n    container: {\n        backgroundColor: '#fff',\n        position: 'relative',\n        flex: 1,\n\n\n    },\n    checkButton: {\n        position: 'absolute',\n        right: 0,\n    },\n    item: {\n        fontSize: 30,\n        left: 0,\n\n    },\n    itemContainer: {\n        position: 'relative',\n        marginBottom: 5,\n    }\n\n\n})\n\n\n\n"]},"metadata":{},"sourceType":"module"}